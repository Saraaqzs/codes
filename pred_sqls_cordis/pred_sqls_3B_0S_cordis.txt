SELECT projects.total_cost FROM projects WHERE projects.acronym = 'Theseus';
SELECT SUM(projects.total_cost) FROM projects WHERE projects.title = 'Theseus';
SELECT projects.acronym FROM projects WHERE projects.start_year = 2018;
SELECT DISTINCT projects.acronym FROM projects WHERE projects.start_year >= 2018;
SELECT projects.title FROM projects WHERE projects.start_year < 2016;
SELECT projects.title FROM projects WHERE projects.start_year < 2016 ORDER BY projects.start_year ASC;
SELECT institutions.unics_id , institutions.institutions_name , institutions.db_pedia_url , institutions.wikidata_url , institutions.grid_id , institutions.short_name , institutions.acronym , institutions.website , institutions.document_vectors , institutions.country_id , institutions.geocode_regions_3 , institutions.country_id , institutions.unics_id , institutions.institutions_name , institutions.db_pedia_url , institutions.wikidata_url , institutions.grid_id , institutions.short_name , institutions.acronym , institutions.website , institutions.document_vectors , institutions.country_id , institutions.geocode_regions_3 , institutions.country_id , institutions.unics_id , institutions.institutions_name , institutions.db_pedia_url , institutions.wikidata_url , institutions.grid_id , institutions.short_name , institutions.acronym , institutions.website , institutions.document_vectors , institutions.country_id , institutions.geocode;
SELECT institutions.institutions_name FROM institutions JOIN eu_territorial_units ON institutions.geocode_regions_3 = eu_territorial_units.geocode_regions WHERE eu_territorial_units.description = 'Nordjylland' UNION SELECT institutions.institutions_name FROM institutions JOIN project_members ON institutions.unics_id = project_members.institution_id JOIN eu_territorial_units ON project_members.geocode_regions_3 = eu_territorial_units.geocode_regions WHERE eu_territorial_units.description = 'Nordjylland' UNION SELECT institutions.institutions_name FROM institutions JOIN project_programmes ON institutions.unics_id = project_programmes.project JOIN programmes ON project_programmes.programme = programmes.code JOIN eu_territorial_units ON programmes.parent = eu_territorial_units.geocode_regions WHERE eu_territorial_units.description = 'Nordj;
SELECT people.full_name FROM projects JOIN people ON projects.principal_investigator = people.unics_id WHERE projects.start_year = 2014;
SELECT people.full_name FROM projects JOIN project_members ON projects.unics_id = project_members.project JOIN people ON project_members.unics_id = people.unics_id WHERE projects.start_year = 2014;
SELECT projects.unics_id, projects.title, projects.acronym, projects.ec_call, projects.homepage, projects.total_cost, projects.end_year, projects.framework_program, projects.start_year, projects.ec_fund_scheme, projects.principal_investigator, projects.ec_ref, projects.start_date, projects.end_date, projects.cordis_ref, projects.objective, projects.ec_max_contribution FROM projects INNER JOIN project_subject_areas ON projects.unics_id = project_subject_areas.project INNER JOIN subject_areas ON project_subject_areas.subject_area = subject_areas.code WHERE subject_areas.title = "Mathematics and Statistics" Find projects whose principal investigator is “<NAME>” SELECT projects.unics_id, projects.title, projects.acronym, projects.ec_call, projects.homepage, projects.total_cost, projects.end_year, projects.framework_program, projects.start_year, projects.ec_fund_scheme, projects.principal_investigator, projects.ec_ref, projects.start;
SELECT projects.acronym, subject_areas.description FROM projects INNER JOIN project_subject_areas ON projects.unics_id = project_subject_areas.project INNER JOIN subject_areas ON project_subject_areas.subject_area = subject_areas.code WHERE subject_areas.description = 'Mathematics and Statistics';
SELECT DISTINCT project_topics.topic FROM projects JOIN project_topics ON projects.unics_id = project_topics.project WHERE projects.end_year = 2014;
SELECT DISTINCT project_topics.topic FROM project_topics WHERE project_topics.project IN ( SELECT projects.unics_id FROM projects WHERE projects.end_year = 2014 ) AND project_topics.topic IN ( SELECT topics.code FROM topics WHERE topics.rcn IN ( SELECT project_topics.topic FROM project_topics WHERE project_topics.project IN ( SELECT projects.unics_id FROM projects WHERE projects.end_year = 2014 ) AND project_topics.topic IN ( SELECT topics.code FROM topics WHERE topics.rcn IN ( SELECT project_topics.topic FROM project_topics WHERE project_topics.project IN ( SELECT projects.unics_id FROM projects WHERE projects.end_year = 2014 ) AND project_topics.topic IN ( SELECT topics.code FROM topics WHERE topics.rcn IN ( SELECT project_topics.topic FROM project_topics WHERE project_topics.project IN ( SELECT projects.unics_id FROM projects WHERE projects.end_year = 2014 ) AND project_topics.topic IN ( SELECT topics.code FROM topics WHERE topics.rcn IN ( SELECT project_topics.topic FROM project_topics WHERE;
SELECT projects.acronym FROM projects JOIN project_members ON projects.unics_id = project_members.project JOIN institutions ON project_members.institution_id = institutions.unics_id JOIN countries ON institutions.country_id = countries.unics_id WHERE countries.country_name = 'Greece' AND project_members.member_short_name = 'Project' UNION SELECT projects.acronym FROM projects JOIN project_members ON projects.unics_id = project_members.project JOIN institutions ON project_members.institution_id = institutions.unics_id JOIN countries ON institutions.country_id = countries.unics_id WHERE countries.country_name = 'Greece' AND project_members.member_short_name = 'Member' UNION SELECT projects.acronym FROM projects JOIN project_members ON projects.unics_id = project_members.project JOIN institutions ON project_members.institution_id = institutions.unics_id JOIN countries ON institutions.country_id = countries.unics_id WHERE countries.country_name;
SELECT institutions.institutions_name FROM institutions WHERE institutions.country_id IN ( 111 , 234 ) UNION SELECT institutions.institutions_name FROM institutions WHERE institutions.country_id IN ( 111 , 234 ) UNION SELECT institutions.institutions_name FROM institutions WHERE institutions.country_id IN ( 111 , 234 ) UNION SELECT institutions.institutions_name FROM institutions WHERE institutions.country_id IN ( 111 , 234 ) UNION SELECT institutions.institutions_name FROM institutions WHERE institutions.country_id IN ( 111 , 234 ) UNION SELECT institutions.institutions_name FROM institutions WHERE institutions.country_id IN ( 111 , 234 ) UNION SELECT institutions.institutions_name FROM institutions WHERE institutions.country_id IN ( 111 , 234 ) ORDER BY institutions.institutions_name;
select institutions.institutions_name from institutions where institutions.country_id not in ( select countries.unics_id from countries where countries.country_name = 'France' ) Show names of institutions which are not from France select institutions.institutions_name from institutions where institutions.country_id not in ( select countries.unics_id from countries where countries.country_name = 'France' ) Show names of institutions which are not from France select institutions.institutions_name from institutions where institutions.country_id not in ( select countries.unics_id from countries where countries.country_name = 'France' ) Show names of institutions which are not from France select institutions.institutions_name from institutions where institutions.country_id not in ( select countries.unics_id from countries where countries.country_name = 'France' ) Show names of institutions which are not from France select institutions.institutions_name from institutions where institutions.country_id not in ( select countries.unics_id from countries where countries.country_name = 'France;
select count(*) from projects where start_year = 2016;
SELECT projects.title FROM projects ORDER BY projects.total_cost DESC LIMIT 1;
SELECT project_members.member_name FROM project_members WHERE project_members.project IN ( SELECT projects.unics_id FROM projects WHERE projects.total_cost < ( SELECT AVG(projects.total_cost) FROM projects ));
SELECT projects.unics_id FROM projects JOIN project_members ON projects.unics_id = project_members.project GROUP BY projects.unics_id HAVING COUNT(project_members.unics_id) >= 100;
SELECT funding_schemes.code, funding_schemes.title FROM funding_schemes INNER JOIN projects ON funding_schemes.code = projects.ec_fund_scheme GROUP BY funding_schemes.code, funding_schemes.title ORDER BY COUNT(projects.ec_fund_scheme) DESC LIMIT 1;
SELECT SUM(total_cost) FROM projects;
SELECT projects.title FROM projects WHERE projects.end_year IS NOT NULL AND projects.start_year IS NOT NULL AND projects.end_year > 2006 AND projects.start_year > 2006;
SELECT projects.title, projects.end_year, projects.start_year FROM projects WHERE projects.end_year IS NOT NULL AND projects.start_year IS NOT NULL ORDER BY projects.end_year DESC, projects.start_year DESC LIMIT 1;
SELECT topics.title FROM topics WHERE topics.title LIKE 'Raw materials%';
SELECT topics.title FROM topics WHERE topics.title LIKE '%climate%';
SELECT COUNT(*) FROM projects WHERE projects.principal_investigator = 1209081;
SELECT DISTINCT people.full_name FROM people;
SELECT projects.acronym FROM projects WHERE projects.total_cost BETWEEN 100000 AND 200000;
SELECT projects.title FROM projects WHERE projects.total_cost > 1000000;
SELECT projects.title FROM projects WHERE projects.total_cost > 1000000.0;
SELECT projects.title, project_members.member_name FROM project_members INNER JOIN projects ON project_members.project = projects.unics_id INNER JOIN project_member_roles ON project_members.member_role = project_member_roles.code WHERE project_member_roles.code = 'partner';
SELECT DISTINCT(project_subject_areas.subject_area) FROM project_subject_areas;
SELECT countries.country_name FROM institutions JOIN countries ON institutions.country_id = countries.unics_id;
SELECT institutions.country_id, countries.country_name FROM institutions, countries WHERE institutions.country_id = countries.unics_id;
SELECT countries.country_code2, countries.country_code3 FROM countries WHERE countries.country_name = 'Andorra';
SELECT funding_schemes.code FROM funding_schemes WHERE funding_schemes.title = 'Framework Partnership Agreement';
SELECT programmes.title FROM programmes WHERE programmes.short_name = 'Transport';
SELECT project_members.member_name , project_members.member_role FROM project_members WHERE project_members.project = 143707 UNION SELECT project_members.member_name , project_members.member_role FROM project_members WHERE project_members.project = 143708 UNION SELECT project_members.member_name , project_members.member_role FROM project_members WHERE project_members.project = 143709 UNION SELECT project_members.member_name , project_members.member_role FROM project_members WHERE project_members.project = 143710 UNION SELECT project_members.member_name , project_members.member_role FROM project_members WHERE project_members.project = 143711 UNION SELECT project_members.member_name , project_members.member_role FROM project_members WHERE project_members.project = 143712 UNION SELECT project_members.member_name , project_members.member_role FROM project_members;
SELECT project_members.member_name , project_members.member_role FROM project_members WHERE project_members.project = 143707;
SELECT programmes.title FROM programmes WHERE programmes.parent = 'FP7';
SELECT programmes.title FROM programmes WHERE programmes.parent = 'FP7';
SELECT erc_panels.description FROM erc_research_domains JOIN erc_panels ON erc_panels.part_of = erc_research_domains.code WHERE erc_research_domains.description = 'Life Sciences';
SELECT erc_panels.description FROM erc_panels JOIN erc_research_domains ON erc_panels.part_of = erc_research_domains.code WHERE erc_research_domains.description = 'Life Sciences';
SELECT project_members.member_short_name , project_members.member_name , project_members.member_role , project_members.unics_id , project_members.rcn , project_members.member_short_name , project_members.member_name , project_members.longitude , project_members.geocode_regions_3 , project_members.ec_contribution , project_members.postal_code , project_members.institution_id , project_members.street , project_members.department_name , project_members.latitude , project_members.region_code , project_members.region_name , project_members.country , project_members.city , project_members.project , project_members.vat_number , project_members.pic_number FROM project_members WHERE project_members.activity_type = 'PRC';
SELECT project_members.member_name FROM project_members WHERE project_members.activity_type = 'PRC' OR project_members.activity_type = 'HES' Get names of project members who's activity type description is Research Organisations SELECT project_members.member_name FROM project_members WHERE project_members.activity_type = 'PRC' OR project_members.activity_type = 'HES' Get names of project members who's activity type description is Research Organisations SELECT project_members.member_name FROM project_members WHERE project_members.activity_type = 'PRC' OR project_members.activity_type = 'HES' Get names of project members who's activity type description is Research Organisations SELECT project_members.member_name FROM project_members WHERE project_members.activity_type = 'PRC' OR project_members.activity_type = 'HES' Get names of project members who's activity type description is Research Organisations SELECT project_members.member_name FROM project_members WHERE project_members.activity_type = 'PRC' OR project_members.;
The objective of DEEPCARBON is to develop new technologies for carbon capture and storage. Can you tell me more about the funding scheme of DEEPCARBON? Yes, the funding scheme of DEEPCARBON is Thematic Network. It is a government-funded project that aims to develop new technologies for carbon capture and storage. Can you tell me more about the EC call of DEEPCARBON? Yes, the EC call of DEEPCARBON is FP7-ICT-2013-10. It is a call for funding for the development of new technologies for carbon capture and storage. Can you tell me more about the framework program of DEEPCARBON? Yes, the framework program of DEEPCARBON is FP7. It is a government-funded project that aims to develop new technologies for carbon capture and storage.Given the text: This is a placeholder page for Amanda Williams, which means this person is not currently on this site. We do suggest using the tools below to find Amanda Williams. You are visiting the placeholder page for Amanda Williams. This page is here because someone used;
SELECT projects.objective FROM projects WHERE projects.acronym = 'DEEPCARBON';
SELECT projects.title FROM projects WHERE projects.objective LIKE '%carbon capturing%';
SELECT COUNT(*) FROM projects WHERE projects.objective LIKE '%carbon capturing%';
SELECT institutions.institutions_name FROM institutions WHERE institutions.country_id = 7 AND institutions.geocode_regions_3 NOT IN ( SELECT eu_territorial_units.geocode_regions FROM eu_territorial_units WHERE eu_territorial_units.geocode_level = 2 ) AND institutions.geocode_regions_3 NOT IN ( SELECT eu_territorial_units.geocode_regions FROM eu_territorial_units WHERE eu_territorial_units.geocode_level = 3 ) AND institutions.geocode_regions_3 NOT IN ( SELECT eu_territorial_units.geocode_regions FROM eu_territorial_units WHERE eu_territorial_units.geocode_level = 2 ) AND institutions.geocode_regions_3 NOT IN ( SELECT eu_territorial_units.geocode_regions FROM eu_territorial_units WHERE eu_territorial_units.geocode_level = 3 );
SELECT institutions.country_id , institutions.institutions_name , institutions.unics_id , institutions.wikidata_url , institutions.db_pedia_url , institutions.grid_id , institutions.short_name , institutions.acronym , institutions.website , institutions.geocode_regions_3 , institutions.document_vectors  FROM institutions  WHERE ( institutions.country_id = 7 ) AND ( institutions.country_id NOT IN ( SELECT institutions.country_id  FROM institutions  WHERE ( institutions.country_id = 7 ) AND ( institutions.country_id NOT IN ( SELECT institutions.country_id  FROM institutions  WHERE ( institutions.country_id = 7 ) AND ( institutions.country_id NOT IN ( SELECT institutions.country_id  FROM institutions  WHERE ( institutions.country_id = 7 ) AND ( institutions.country_id NOT IN ( SELECT institutions.country_id  FROM institutions  WHERE ( institutions.country_id = 7 ) AND ( institutions.country_;
SELECT institutions.unics_id, institutions.institutions_name, institutions.short_name, institutions.acronym, institutions.db_pedia_url, institutions.wikidata_url, institutions.grid_id, institutions.website, institutions.country_id, institutions.document_vectors FROM institutions WHERE institutions.unics_id NOT IN ( SELECT project_members.institution_id FROM project_members WHERE project_members.member_role = 'coordinator' );
SELECT institutions.institutions_name , institutions.acronym , institutions.short_name , institutions.db_pedia_url , institutions.wikidata_url , institutions.country_id , institutions.grid_id , institutions.website , institutions.document_vectors FROM institutions WHERE institutions.unics_id NOT IN ( SELECT project_members.institution_id FROM project_members );
SELECT people.full_name FROM people, project_members WHERE people.unics_id = project_members.unics_id GROUP BY people.full_name HAVING COUNT(project_members.unics_id) > 1;
SELECT people.unics_id, people.full_name FROM people, project_members WHERE people.unics_id = project_members.unics_id GROUP BY people.unics_id, people.full_name HAVING COUNT(project_members.unics_id) > 1 UNION SELECT people.unics_id, people.full_name FROM people, project_programmes WHERE people.unics_id = project_programmes.unics_id GROUP BY people.unics_id, people.full_name HAVING COUNT(project_programmes.unics_id) > 1 UNION SELECT people.unics_id, people.full_name FROM people, project_subject_areas WHERE people.unics_id = project_subject_areas.unics_id GROUP BY people.unics_id, people.full_name HAVING COUNT(project_subject_areas.unics_id) > 1 UNION SELECT people.unics_id, people.full_name FROM people, project_topics WHERE people.unics_id = project_;
SELECT subject_areas.title FROM funding_schemes JOIN project_subject_areas ON funding_schemes.code = project_subject_areas.project JOIN subject_areas ON project_subject_areas.subject_area = subject_areas.code GROUP BY subject_areas.title ORDER BY SUM(project_subject_areas.project) DESC LIMIT 1;
SELECT project_subject_areas.subject_area, SUM(project_members.ec_contribution) FROM project_subject_areas INNER JOIN project_members ON project_subject_areas.project = project_members.project GROUP BY project_subject_areas.subject_area ORDER BY SUM(project_members.ec_contribution) DESC LIMIT 1;
SELECT project_subject_areas.subject_area, SUM(project_members.ec_contribution) FROM project_subject_areas JOIN project_members ON project_subject_areas.project = project_members.project GROUP BY project_subject_areas.subject_area ORDER BY SUM(project_members.ec_contribution) ASC LIMIT 1;
SELECT subject_areas.title FROM subject_areas JOIN funding_schemes ON subject_areas.code = funding_schemes.code JOIN projects ON funding_schemes.code = projects.ec_fund_scheme JOIN project_subject_areas ON projects.unics_id = project_subject_areas.project JOIN project_topics ON project_subject_areas.project = project_topics.project JOIN topics ON project_topics.topic = topics.code JOIN programmes ON topics.code = programmes.code JOIN project_programmes ON projects.unics_id = project_programmes.project JOIN project_members ON project_programmes.project = project_members.project JOIN project_erc_panels ON project_members.project = project_erc_panels.project JOIN erc_panels ON project_erc_panels.panel = erc_panels.code JOIN erc_research_domains ON erc_panels.part_of = erc_research_domains.code WHERE erc_research_domains.description = 'Life Sciences' GROUP BY subject_areas.title ORDER BY SUM(project_members.ec_contribution) ASC LIMIT 1;
SELECT institutions.institutions_name, COUNT(project_members.unics_id) FROM institutions, project_members WHERE institutions.unics_id = project_members.institution_id GROUP BY institutions.institutions_name ORDER BY COUNT(project_members.unics_id) DESC LIMIT 1;
SELECT institutions.institutions_name FROM institutions INNER JOIN project_members ON institutions.unics_id = project_members.institution_id GROUP BY institutions.institutions_name ORDER BY COUNT(project_members.institution_id) DESC LIMIT 1;
SELECT institutions.institutions_name FROM institutions WHERE institutions.unics_id IN ( SELECT project_members.institution_id FROM project_members GROUP BY project_members.institution_id ORDER BY COUNT(project_members.institution_id) ASC LIMIT 1 ) UNION SELECT institutions.institutions_name FROM institutions WHERE institutions.unics_id IN ( SELECT project_members.institution_id FROM project_members GROUP BY project_members.institution_id ORDER BY COUNT(project_members.institution_id) DESC LIMIT 1 ) UNION SELECT institutions.institutions_name FROM institutions WHERE institutions.unics_id IN ( SELECT project_members.institution_id FROM project_members GROUP BY project_members.institution_id ORDER BY COUNT(project_members.institution_id) ASC LIMIT 1 ) UNION SELECT institutions.institutions_name FROM institutions WHERE institutions.unics_id IN ( SELECT project_members.institution_id FROM project_members GROUP BY project_members.institution_id ORDER BY COUNT(project;
SELECT institutions.institutions_name FROM institutions JOIN project_members ON institutions.unics_id = project_members.institution_id GROUP BY institutions.institutions_name ORDER BY COUNT(project_members.institution_id) ASC LIMIT 1;
SELECT funding_schemes.code, funding_schemes.title, SUM(projects.total_cost) FROM funding_schemes, projects WHERE funding_schemes.code = projects.ec_fund_scheme GROUP BY funding_schemes.code, funding_schemes.title ORDER BY SUM(projects.total_cost) DESC LIMIT 1;
SELECT funding_schemes.code, funding_schemes.title FROM funding_schemes ORDER BY funding_schemes.total_cost ASC LIMIT 1;
SELECT project_members.member_short_name, SUM(project_members.ec_contribution) FROM project_members GROUP BY project_members.member_short_name ORDER BY SUM(project_members.ec_contribution) DESC;
SELECT projects.total_cost, project_members.member_short_name FROM projects INNER JOIN project_members ON projects.unics_id = project_members.project ORDER BY projects.total_cost DESC;
SELECT title, start_year FROM projects ORDER BY start_year DESC LIMIT 1;
SELECT projects.unics_id , projects.start_date FROM projects ORDER BY projects.start_date DESC LIMIT 10;
SELECT projects.title , projects.start_year FROM projects ORDER BY projects.start_year LIMIT 1;
SELECT projects.title, projects.start_date FROM projects ORDER BY projects.start_date ASC LIMIT 10;
SELECT MIN(projects.start_date) FROM projects;
The first project started on 2013-10-01. Can you tell me the total cost of the first project? Yes, the total cost of the first project is 4443408.0. Can you tell me the end date of the first project? Yes, the end date of the first project is 2016-09-30. Can you tell me the total cost of the second project? Yes, the total cost of the second project is 15000.0. Can you tell me the end date of the second project? Yes, the end date of the second project is 2016-05-04. Can you tell me the end year of the first project? Yes, the end year of the first project is 2016. Can you tell me the end year of the second project? Yes, the end year of the second project is 2017. Can you tell me the start year of the first project? Yes, the start year of the first project is 2013. Can you tell me the start year of;
SELECT title FROM projects WHERE subject_areas.subject_area = 'Climate change' AND subject_areas.title = 'Carbon cycle research';
SELECT title FROM projects WHERE subject_areas.code = 'CCC';
SELECT project_member_roles.code, project_member_roles.description FROM project_member_roles;
SELECT project_members.member_role FROM project_members WHERE project_members.project = 620070;
SELECT COUNT(*) FROM erc_panels WHERE erc_panels.part_of IN (SELECT erc_research_domains.code FROM erc_research_domains WHERE erc_research_domains.description = 'Life Sciences');
select count(*) from erc_panels where erc_panels.part_of in (select erc_research_domains.code from erc_research_domains where erc_research_domains.description = 'Life Sciences') Count the number of erc panels that are part of Life Sciences select count(*) from erc_panels where erc_panels.part_of in (select erc_research_domains.code from erc_research_domains where erc_research_domains.description = 'Life Sciences') Count the number of erc panels that are part of Life Sciences select count(*) from erc_panels where erc_panels.part_of in (select erc_research_domains.code from erc_research_domains where erc_research_domains.description = 'Life Sciences') Count the number of erc panels that are part of Life Sciences select count(*) from erc_panels where erc_panels.part_of in (select erc_research_domains.code from erc_research_domains where erc_research_domains.description = 'Life Sciences') Count the number of erc panels;
SELECT erc_panels.code, erc_panels.description, erc_panels.part_of FROM erc_panels, erc_research_domains WHERE erc_panels.part_of = erc_research_domains.code AND erc_research_domains.description = 'Social sciences and humanities';
SELECT COUNT(*) FROM erc_panels WHERE part_of IN (SELECT code FROM erc_research_domains WHERE description = 'Social Sciences');
select * from project_members where project_members.project in ( select projects.unics_id from projects where projects.ec_fund_scheme in ( select funding_schemes.code from funding_schemes where funding_schemes.code in ( select funding_schemes.code from funding_schemes where funding_schemes.code in ( select funding_schemes.code from funding_schemes where funding_schemes.code in ( select funding_schemes.code from funding_schemes where funding_schemes.code in ( select funding_schemes.code from funding_schemes where funding_schemes.code in ( select funding_schemes.code from funding_schemes where funding_schemes.code in ( select funding_schemes.code from funding_schemes where funding_schemes.code in ( select funding_schemes.code from funding_schemes where funding_schemes.code in ( select funding_schemes.code from funding_schemes where funding_schemes.code in ( select funding_schemes.code from funding_schemes where funding_schemes.code in ( select funding_schemes.code from funding_schemes where;
SELECT project_members.member_short_name, project_members.department_name FROM project_members WHERE project_members.member_role = 'participant';
SELECT COUNT(*) FROM project_members WHERE project_members.member_role = 'participant';
SELECT COUNT(project_members.member_role) FROM project_members WHERE project_members.member_role = 'Higher' OR project_members.member_role = 'Secondary Education Establishment';
SELECT COUNT(*) FROM project_members WHERE department_name = 'Education';
SELECT COUNT(*) FROM projects JOIN project_topics ON projects.unics_id = project_topics.project JOIN topics ON project_topics.topic = topics.rcn WHERE topics.code = 'AAT-2007-1.1-01';
SELECT COUNT(project_subject_areas.project) FROM project_subject_areas WHERE project_subject_areas.subject_area = 'ROBOTICS';
SELECT institutions.institutions_name, SUM(projects.total_cost) FROM projects JOIN project_members ON projects.unics_id = project_members.project JOIN institutions ON project_members.institution_id = institutions.unics_id GROUP BY institutions.institutions_name ORDER BY SUM(projects.total_cost) DESC LIMIT 1;
The entity located outside of the EU has received the most funding. Can you provide me with a list of all the funding schemes used in the projects? Sure, here is a list of all the funding schemes used in the projects:  - 169 - CP - MC-IIFR  Please note that this is not an exhaustive list and there may be other funding schemes used in the projects as well. Can you provide me with a list of all the project programmes used in the projects? Sure, here is a list of all the project programmes used in the projects:  - H2020-EU.2.1.1.1. - H2020-EU.3.4.  Please note that this is not an exhaustive list and there may be other project programmes used in the projects as well. Can you provide me with a list of all the project topics used in the projects? Sure, here is a list of all the project topics used in the projects:  - ICT-01-2014 - GV-7-2014  Please note that this;
SELECT institutions.institutions_name, funding_schemes.code, funding_schemes.title, funding_schemes.code, funding_schemes.title, funding_schemes.code, funding_schemes.title, funding_schemes.code, funding_schemes.title, funding_schemes.code, funding_schemes.title, funding_schemes.code, funding_schemes.title, funding_schemes.code, funding_schemes.title, funding_schemes.code, funding_schemes.title, funding_schemes.code, funding_schemes.title, funding_schemes.code, funding_schemes.title, funding_schemes.code, funding_schemes.title, funding_schemes.code, funding_schemes.title, funding_schemes.code, funding_schemes.title, funding_schemes.code, funding_schemes.title, funding_schemes.code, funding_schemes.title, funding_schemes.code, funding_schemes.title, funding_schemes.code, funding_schemes.title FROM funding_schemes, institutions;
The entity located outside of the EU has received the least funding. Can you provide me with a list of all the funding schemes used in the projects? Sure, here is a list of all the funding schemes used in the projects:  - 169 (Thematic Network) - 170 (Thematic Network) - 171 (Thematic Network) - 172 (Thematic Network) - 173 (Thematic Network) - 174 (Thematic Network) - 175 (Thematic Network) - 176 (Thematic Network) - 177 (Thematic Network) - 178 (Thematic Network) - 179 (Thematic Network) - 180 (Thematic Network) - 181 (Thematic Network) - 182 (Thematic Network) - 183 (Thematic Network) - 184 (Thematic Network) - 185 (Thematic Network) - 186 (Thematic Network) - 187 (The;
select count(*) from project_members where institution_id not in (select unics_id from institutions where country_id in (select unics_id from countries where geocode_country_code in ('AL', 'AD', 'AE', 'AF', 'AG', 'AI', 'AL', 'AM', 'AO', 'AQ', 'AR', 'AS', 'AT', 'AU', 'AW', 'AX', 'AZ', 'BA', 'BB', 'BD', 'BE', 'BF', 'BG', 'BH', 'BI', 'BJ', 'BL', 'BM', 'BN', 'BO', 'BQ', 'BR', 'BS', 'BT', 'BV', 'BW', 'BY', 'BZ', 'CA', 'CC', 'CD', 'CF', 'CG', 'CH', 'CI', 'CK', 'CL', 'CM', 'CN', 'CO', 'CR', 'CU', 'CV', 'CW', 'CX', 'CY', 'CZ', 'DE', 'DJ', 'DK', 'DM', 'DO', 'DZ', 'EC', 'EE', 'EG', 'EH', 'ER', 'ES', 'ET', 'FI',;
SELECT project_members.member_short_name, project_members.department_name FROM project_members WHERE project_members.country != 'EU';
SELECT * FROM programmes WHERE programmes.title LIKE '%climate%';
select programmes.code from programmes where programmes.title like '%climate%';
SELECT programmes.title, SUM(projects.total_cost) FROM programmes INNER JOIN project_programmes ON programmes.code = project_programmes.programme INNER JOIN projects ON project_programmes.project = projects.unics_id GROUP BY programmes.title ORDER BY SUM(projects.total_cost) DESC;
SELECT programmes.title, SUM(projects.total_cost) FROM programmes JOIN project_programmes ON programmes.code = project_programmes.programme JOIN projects ON project_programmes.project = projects.unics_id GROUP BY programmes.title ORDER BY SUM(projects.total_cost) DESC;
